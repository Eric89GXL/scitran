worker_processes 2;
daemon off;

events {
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml text/javascript application/json application/x-javascript application/xml application/xml+rss;

    ssl_certificate /etc/nginx/key+cert.pem;
    ssl_certificate_key /etc/nginx/key+cert.pem;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:1m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    access_log /service/log/nginx-access.log;
    error_log /service/log/nginx-error.log error;

    server {
        rewrite ^ https://$host$request_uri? permanent;
    }

    server {
        listen 443 ssl;

        location / {
            root /service/web;
            index index.html;
        }

        location /api {
            uwsgi_pass api:3031;
            include uwsgi_params;
            proxy_set_header Host $host;
            client_max_body_size 50g;
            add_header Access-Control-Allow-Origin $http_origin always;
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin always;
                add_header Access-Control-Allow-Methods 'GET, HEAD, POST, PUT, DELETE, OPTIONS';
                add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
                add_header Access-Control-Max-Age 151200;
                return 204;
            }
        }
    }

    server {
        listen 8080 ssl;
        ssl_client_certificate /etc/ssl/certs/ca-certificates.crt;
        ssl_verify_client on;
        ssl_verify_depth 3;

        location /api {
            uwsgi_pass api:3031;
            include uwsgi_params;
            uwsgi_param SSL_CLIENT_VERIFY $ssl_client_verify;
            proxy_set_header Host $host;
            client_max_body_size 50g;
            add_header Access-Control-Allow-Origin $http_origin always;
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin always;
                add_header Access-Control-Allow-Methods 'GET, HEAD, POST, PUT, DELETE, OPTIONS';
                add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
                add_header Access-Control-Max-Age 151200;
                return 204;
            }
        }
    }
}
